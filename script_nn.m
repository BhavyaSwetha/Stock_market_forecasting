% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by NFTOOL
% Created Fri May 30 11:19:23 CEST 2014
%
% This script assumes these variables are defined:
%
%   Campioni_input_allenamento - input data.
%   output_sp_allenamento - target data.

inputs = Campioni_input_allenamento_nn';
targets = output_allenamento_nn';

% Create a Fitting Network
hiddenLayerSize = n;
net = fitnet(hiddenLayerSize);


% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;


% Train the Network
%for q=1:num_tr(t)
    [net,tr] = train(net,inputs,targets); % allenamento
%end

% Test the Network
outputs = net(inputs);
errors = gsubtract(targets,outputs);
performance = perform(net,targets,outputs); % mse

% View the Network
%view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, plotfit(net,inputs,targets)
%figure, plotregression(targets,outputs)
%figure, ploterrhist(errors)
